{
    "luahelper.source.roots": "设置source roots",
    "luahelper.run.mode": "插件读取配置的方式，目前支持两种方式：1）读取vecode工程下的ylua.json配置; 2）读取后面整体的插件配置",
    "luahelper.run.json": "读取每个工程下的ylua.json配置，如果没有发现ylua.json配置，会报错",
    "lylua.run.setting": "读取后面整体的插件工程配置",
    "luahelper.source.rootdir": "整体工程的根目录",
    "luahelper.reference.maxNum": "查找引用时，显示最大的引用数量",
    "luahelper.run.lsp": "连接后端lsp server的方式",
    "luahelper.run.cmdrpc": "本地进程间连接",
    "luahelper.run.socketrpc": "本地socket网络连接",
    "luahelper.project.requirePathSeparator": "require其他文件时的路径分割符，默认为 require('one.bb')",
    "luahelper.project.requirePathSeparator1": "默认为 . 例如 require('one.bb')",
    "luahelper.project.requirePathSeparator2": "设置为 / require('one/bb')",
    "luahelper.format.errShow": "如果格式化错误了，是否要显示错误",
    "luahelper.show.online": "显示当前插件在线人数",
    "luahelper.show.costTime": "显示插件启动时间",
    "luahelper.reference.incudeDefine": "显示引用时候，是否需要包含定义",
    "luahelper.lspserver.log": "是否打开lsp server的日志，方便定位问题",
    "luahelper.colors.Enable": "是否开启变量高亮显示，若开启请设置下面的颜色",
    "luahelper.colors.globalfield": "全局变量颜色",
    "luahelper.colors.globalfun": "全局方法(函数)颜色",
    "luahelper.colors.annotatetype": "注解系统类型颜色",
    "luahelper.Warn.AllEnable": "代码检查的全局开关",
    "luahelper.Warn.CheckSyntax": "[Warn Type:1], 是否开启基本语法检查",
    "luahelper.Warn.CheckNoDefine": "[Warn Type:2], 是否开启变量未定义检查",
    "luahelper.Warn.CheckAfterDefine": "[Warn Type:3], 是否全局变量先使用后定义检查",
    "luahelper.Warn.CheckLocalNoUse": "[Warn Type:4], 是否开启局部变量定义了未使用检查",
    "luahelper.Warn.CheckTableDuplicateKey": "[Warn Type:5], 是否开启table定义中含有重复的key",
    "luahelper.Warn.CheckReferNoFile": "[Warn Type:6], 是否开启引用其他文件，文件找不到检查",
    "luahelper.Warn.CheckAssignParamNum": "[Warn Type:7], 是否开启赋值语句参数个数不匹配检查",
    "luahelper.Warn.CheckLocalDefineParamNum": "[Warn Type:8], 是否开启局部变量定义语句，参数个数不匹配检查",
    "luahelper.Warn.CheckGotoLable": "[Warn Type:9], 是否开启goto语句，查找不对应label检查",
    "luahelper.Warn.CheckFuncParam": "[Warn Type:10], 是否开函数调用时，参数个数不匹配检查",
    "luahelper.Warn.CheckImportModuleVar": "[Warn Type:11], 是否开import其他lua文件，未找到对应的全局模块变量检查",
    "luahelper.Warn.CheckIfNotVar": "[Warn Type:12], 是否开import其他lua文件，未找到对应的全局模块变量检查",
    "luahelper.Warn.CheckFunctionDuplicateParam": "[Warn Type:13], 是否开import其他lua文件，未找到对应的全局模块变量检查",
    "luahelper.Warn.CheckBinaryExpressionDuplicate": "[Warn Type:14], 是否开import其他lua文件，未找到对应的全局模块变量检查",
    "luahelper.Warn.CheckErrorOrAlwaysTrue": "[Warn Type:15], 是否开启or表达式永远为true的检查",
    "luahelper.Warn.CheckErrorAndAlwaysFalse": "[Warn Type:16], 是否开启and表达式永远为false的检查",
    "luahelper.Warn.CheckNoUseAssign": "[Warn Type:17], 定义了的局部变量未使用, 但是简短的赋值了",
    "luahelper.Warn.CheckAnnotateType": "[Warn Type:18], 是否开启注解类型的检查",
    "luahelper.Warn.CheckDuplicateIf": "[Warn Type:19], 是否开启分支条件重复的检查",
    "luahelper.Warn.CheckSelfAssign": "[Warn Type:20], 是否开启变量自身赋值的检查",
    "luahelper.Warn.CheckFloatEq": "[Warn Type:21], 是否开启浮点数做等于或不等于判断的检查",
    "luahelper.Warn.CheckClassField": "[Warn Type:22], 是否检查类成员",
    "luahelper.Warn.CheckConstAssign": "[Warn Type:23], 是否检查对常量的赋值",
    "luahelper.Warn.CheckFuncParamType": "[Warn Type:24], 是否检查函数参数类型",
    "luahelper.Warn.CheckFuncReturnType": "[Warn Type:25], 是否检查函数返回值类型",
    "luahelper.workspace.IgnoreFileOrDir": "忽略分析指定的文件或文件夹。例如：one11.lua表示忽略分析文件；.vscode/ 表示忽略分析文件夹",
    "luahelper.workspace.IgnoreFileOrDirErrors": "忽略指定的文件或文件夹的检查错误（文件或文件会被分析，但不会报错）。例如：one11.lua表示忽略文件错误；.vscode/ 表示忽略文件夹错误",
    "luahelper.format.allReadMe": "阅读所有格式化参数请参考 [这里](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md).\n",
    "luahelper.format.column_limit": "一列的字数限制. Column limit of one line [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#column_limit).\n",
    "luahelper.format.indent_width": "用于缩进的空格数.The number of spaces used for indentation [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#indent_width).\n",
    "luahelper.format.use_tab": "使用制表符tab来缩进. Use tab for indent [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#use_tab).\n",
    "luahelper.format.tab_width": "用于制表符tab的空格数. The number of spaces used for tab.",
    "luahelper.format.continuation_indent_width": "连续行的缩进宽度. [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#continuation_indent_width).\n",
    "luahelper.format.keep_simple_control_block_one_line": "允许格式简单控制块. Allow format simple control block(e.g., if, while, for, ...) to one line [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#keep_simple_control_block_one_line).\n",
    "luahelper.format.keep_simple_function_one_line": "允许简单的函数在一行显示. Allow format simple function to one line [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#keep_simple_function_one_line).\n",
    "luahelper.format.align_args": "如果有换行符，则对齐函数调用的参数. Align arguments of a function call if there is a line break. If false, use continuation_indent_width to indentation [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#align_args).\n",
    "luahelper.format.break_after_functioncall_lp": "Break after '(' of function call if columns greater than column_limit [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#break_after_functioncall_lp).\n",
    "luahelper.format.break_before_functioncall_rp": "Break before ')' of function call if columns greater than column_limit [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#break_before_functioncall_rp).\n",
    "luahelper.format.align_parameter": "Align parameter of function define if there is a line break. if false, use continuation_indent_width to indentation [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#align_parameter).\n",
    "luahelper.format.chop_down_parameter": "Chop down all parameters if the function declaration doesn’t fit on a line [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#chop_down_parameter).\n",
    "luahelper.format.break_after_functiondef_lp": "Break after '(' of function define if columns greater than column_limit [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#break_after_functiondef_lp).\n",
    "luahelper.format.break_before_functiondef_rp": "Break before ')' of function define if columns greater than column_limit [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#break_before_functiondef_rp).\n",
    "luahelper.format.align_table_field": "Align fields of a table if there is a line break. if false, use indent_width to indentation [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#align_table_field).\n",
    "luahelper.format.break_after_table_lb": "Break after '{' of a table if columns greater than column_limit [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#break_after_table_lb).\n",
    "luahelper.format.break_before_table_rb": "Break before '}' of a table if columns greater than column_limit [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#break_before_table_rb).\n",
    "luahelper.format.chop_down_table": "Chop down any table [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#chop_down_table).\n",
    "luahelper.format.chop_down_kv_table": "Chop down table if a table contains a key [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#chop_down_kv_table).\n",
    "luahelper.format.column_table_limit": "The column limit of each line of a table. Default value the same as column_limit value [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#column_table_limit).\n",
    "luahelper.format.table_sep": "定义字符以分隔表格字段. Define character to separate table fields [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#table_sep).\n",
    "luahelper.format.extra_sep_at_table_end": "Add an extra field separator after the last field unless the table is in a single line [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#extra_sep_at_table_end).\n",
    "luahelper.format.break_after_operator": "Put break after operators if columns greater than column_limit. If false, put break before operators [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#break_after_operator).\n",
    "luahelper.format.single_quote_to_double_quote": "Transform string literals to use double quotes [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#single_quote_to_double_quote).\n",
    "luahelper.format.double_quote_to_single_quote": "Transform string literals to use a single quote [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#double_quote_to_single_quote).\n",
    "luahelper.format.spaces_before_call": "Inserts a space on function calls with parentheses omitted [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#spaces_before_call).\n",
    "luahelper.format.spaces_inside_functiondef_parens": "Inserts spaces inside the parenthesis in a function header [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#spaces_inside_functiondef_parens).\n",
    "luahelper.format.spaces_inside_functioncall_parens": "Inserts spaces inside the parenthesis in a function call [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#spaces_inside_functioncall_parens).\n",
    "luahelper.format.spaces_inside_table_braces": "Inserts spaces inside the braces in a table constructor [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#spaces_inside_table_braces).\n",
    "luahelper.format.spaces_around_equals_in_field": "Inserts spaces around the equal sign in key/value fields. Other assignments are not affected, though they may be affected by other options or behavior of the formatter [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#spaces_around_equals_in_field).\n",
    "luahelper.format.line_breaks_after_function_body": "函数体后换行数. [here](https://github.com/Koihik/LuaFormatter/blob/master/docs/Style-Config.md#line_breaks_after_function_body).\n",
    "luahelper.base.PreviewFieldsNum": "当代码提示预览一个table时, 显示table最多的成员数量",
    "luahelper.base.enableReport": "上报用户数"
}